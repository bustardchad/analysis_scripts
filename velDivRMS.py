import numpy as np
import matplotlib.pyplot as plt

def add_legend(plot_args_lst, legend_loc = 'best', default_plot_args = {'color' : 'black'},
                **kwargs):
     """Adds another legend to plot.
     Keyword Arguments:
     plot_args_lst      -- List of plotting arguments to show.
     legend_loc         -- Location of new legend (default 'best')
     default_plot_args  -- Arguments will be used for every item in new legend.
     kwargs             -- Will be passed to `plt.legend` of new legend.
     Example:
             add_legend([{'ls' : '-', 'label' : r'$\rho > \rho_{cl}/3$'}, {'ls' : '--', 'label' : r'$T   < 2 T_{cl}$'}],
                                 default_plot_args = {'c' : 'k'},
                                 title = r'')

     Will add a legend with two different lines (both black).
     """
     ax = plt.gca()
     leg = ax.get_legend()
     linelst = []
     for cargs in plot_args_lst:
         for k, v in default_plot_args.items():
             if k not in cargs:
                 cargs[k] = v
         l, = plt.plot(np.nan, **cargs)
         linelst.append(l)
     o = kwargs.copy()
     if 'loc' not in o:
         o['loc'] = legend_loc
     if 'fontsize' not in o:
         o['fontsize'] = 12
     if legend_loc == 'above':
         o['loc'] = 'lower center'
         o['bbox_to_anchor'] = (0.5, 1.01)
     plt.legend(handles = linelst, **o)
     if leg is not None:
         ax.add_artist(leg) # Add old legend




# Volume averaged sqrt((velocity divergence)^2) = RMS velocity divergence
# All are for res = 256^3, at the sweetspot

pcpg05 = [0.011977884105838386 , 0.044705981271785794 , 0.06671604772949807 , 0.07536812627905035 , 0.10170156153107694 , 0.09916396029742004 , 0.1261652896244447 , 0.15288995649381132 , 0.16742970779261307 , 0.17615294462590067 , 0.19291068440349085 , 0.1857709784747485 , 0.1882122733388962 , 0.1846613354308032 , 0.17594092948095236 , 0.18250449194556434 , 0.17803574964417418 , 0.1889223126510673 , 0.19311346758184236 , 0.18953933148860785 , 0.1813958281032966 , 0.18425411398302807 , 0.20039077305842068 , 0.19972263670971588 , 0.1907438351681392 , 0.19492418733091094 , 0.1969248663367393 , 0.18916729595492965 , 0.19665872363362544 , 0.1877294258349501 , 0.17319106172678134 , 0.18511260304945207 , 0.17572069475149765 , 0.16443779100891429 , 0.16877658520074512 , 0.17366830954850826 , 0.16730854434618136 , 0.1810730982572017 , 0.18796938952360592 , 0.1792488181397938 , 0.17739297697096468 , 0.17936711746122463 , 0.17834947635805237 , 0.18667916838353626 , 0.18348368657025926 , 0.1700769171659658 , 0.17618523965310307 , 0.16152379096847297 , 0.17808491441297467 , 0.16388297360744639 , 0.18190968708591904 , 0.18047174093602197 , 0.1821722316692139 , 0.17612136018919336 , 0.17420503872844836 , 0.17366525550516104 ]


pcpg1 = [0.01175330079907943 , 0.0501526729852084 , 0.06889579123287815 , 0.09604893061504367 , 0.09744307731602084 , 0.12392731814905042 , 0.13079764650248213 , 0.1464906626324828 , 0.1499628092252926 , 0.1597914913683035 , 0.17666590465083193 , 0.16787116978009692 , 0.16657245257337597 , 0.18165896577559618 , 0.1780528468517636 , 0.16644311896332248 , 0.1791927345377426 , 0.1705609712881903 , 0.17957786490137573 , 0.17949270281814075 , 0.17908764968261345 , 0.18445966599975777 , 0.17825494724873414 , 0.1934976447455074 , 0.1866501346730517 , 0.1721959205627323 , 0.17362840228815243 , 0.16599262635945372 , 0.16708527973647141 , 0.1684162114855635 , 0.16652521647581964 , 0.18169808342031563 , 0.2043718335722389 , 0.18020044093382306 , 0.18485909677098417 , 0.17789372421680225 , 0.17514112250169053 , 0.17101722427094423 , 0.18314791104381334 , 0.16363010441592207 , 0.16310531674127238 , 0.16752318918609835 , 0.16861798773220482 , 0.16187512012390814 , 0.17347712500187557 , 0.17170097340749288 , 0.15139112463256363 , 0.16319206694660074 , 0.1550096218309559 , 0.15773205260997053 , 0.1562317880392199 , 0.1664660516761023 , 0.16172302763381474 ]

pcpg10 = [0.01175330079907943 , 0.033253986765948096 , 0.04411844705814531 , 0.04851562439913057 , 0.05113399299142367 , 0.053803844593744495 , 0.06732200760532135 , 0.06911500872835535 , 0.06930005288807413 , 0.062338596430560535 , 0.07358134862586213 , 0.0640474413042094 , 0.07534836239254371 , 0.07949985522216818 , 0.07331151311391747 , 0.07621600225722491 , 0.0644700967928739 , 0.07072921832583937 , 0.06658001338261502 , 0.07900845896535334 , 0.06815094477590895 , 0.0782969303726302 , 0.06779103399300496 , 0.07454184857422744 , 0.07315347998589403 , 0.06800466888413303 , 0.06710231205197378 , 0.06540891684391721 , 0.05634523514742015 , 0.061203936514450136 , 0.06013519503494592 , 0.06489775833538797 , 0.06211237606141656 , 0.06205077381937857 , 0.05417290407301449 , 0.05868669474539364 , 0.05318262635775075 , 0.06030960586554 , 0.061511029560451055 , 0.05884390063269814 , 0.06372903560485527 , 0.057951035045950644 , 0.08992399742072259 , 0.07640298367525561 , 0.06879541262055298 , 0.069485390140156 , 0.07561012198289975 , 0.07542386347341679 , 0.07454190583777295 , 0.07270281742023485 , 0.0622886647943245 , 0.0708964779601961 , 0.07167085120556096 , 0.07158812967361683 , 0.06187501945851192 , 0.07181463513559803 , 0.07117190764163521 , 0.0679180059312835 , 0.06038080241620692 , 0.05513493330607547 , 0.07048111188661378 , 0.07319014473207965 , 0.07317518672929885 ]

pcpg100 = [0.01175330079907943 , 0.018522388524330267 , 0.02186214738980599 , 0.026331755351828915 , 0.023068834852774757 , 0.021852855732517145 , 0.025488157862122 , 0.02714544819151396 , 0.02441601893659607 , 0.02362091610675067 , 0.023538173665252363 , 0.02998281311513589 , 0.02970555549051409 , 0.02847231456860737 , 0.02537138032857099 , 0.021795307208509227 , 0.019853351778380005 , 0.021137972298289523 , 0.021757046214547184 , 0.02002838565565138 , 0.0227725813965639 , 0.022007719553894876 , 0.02150481518268117 , 0.02450970576546785 , 0.02039076590023235 , 0.022291137777506787 , 0.01747969428868361 , 0.019948771959555994 , 0.01836035674439787 , 0.014657432139351684 , 0.01805452572940907 , 0.019978729148641877 , 0.019633438460505644 , 0.021474952838071996 , 0.023138346626391613 , 0.02227987243554419 , 0.019930347580325115 , 0.02081025530541896 , 0.025722605433701515 , 0.021732011882154824 , 0.021605274685942866 , 0.020122215166937036 , 0.04192882913347899 , 0.022840319019255335 , 0.02115516484485845 , 0.020289046494952626 , 0.018813062331335166 , 0.02147814471415781 , 0.021933487068101526 , 0.02093023118400636 , 0.021473175603410694 , 0.02162005370542732 , 0.023624530995767917 , 0.021432633892336676 , 0.01853866677790207 , 0.021811703460196168 , 0.01860150518785964 , 0.017010985861744935 , 0.018691663970545593 , 0.022373926528791964 , 0.01904917091574298 , 0.022649102776520443 , 0.02019788598788154 ]

# pc / pg = 100
#pcpg100 = [0.011977884105838391 , 0.01680069306238887 , 0.020534894940425 , 0.021209376749151222 , 0.019853223476495513 , 0.020012028491346305 , 0.017973184904290646 , 0.01834565990781732 , 0.013651017675701649 , 0.017258739465840604 , 0.016275701315693197 , 0.015690988238278577 , 0.015177630028340106 , 0.015124417405906457 , 0.02011252820248692 , 0.022680594563187915 , 0.020073212214990248 , 0.020585178622692126 , 0.021571869654541564 , 0.022878998399348583 , 0.024529577156307214 ]


# pc / pg = 1
pcpg1 = [0.011977884105838391 , 0.040875659132992403 , 0.07000629573578208 , 0.08098043641102975 , 0.10771725290951344 , 0.10308793830185525 , 0.12575280322963944 , 0.1515371484311469 , 0.1701327680671887 , 0.1680809143821071 , 0.18226047274405907 , 0.17485861536438152 , 0.17029243040831193 , 0.1757688771305749 , 0.158991060243744 , 0.16625110831919285 , 0.17047536795841675 , 0.1786559531632229 , 0.17802386297342737 , 0.16890914197619972 , 0.16717950450169783 , 0.17431927402750955 , 0.18593603221011146 , 0.18714253444034018 , 0.1762712461222189 , 0.1847284183796418 , 0.19974395170397757 , 0.1844487257571713 , 0.1839695297229579 , 0.1739486387356633 , 0.15739803536915023 , 0.16788494903191614 , 0.16285175594085285 , 0.1539311382463927 , 0.15709323840032935 , 0.17238350331033545 , 0.162182658431301 , 0.16265300444756597 , 0.16405062764294892 , 0.16337760027726597 , 0.16010043209024113 , 0.16704883614689497 , 0.15321325855981707 , 0.16052692612005248 , 0.17761322675999291 , 0.159059389190782 , 0.15450229946656813 , 0.14162262747125162 , 0.15522115830906077 , 0.1417225512793991 , 0.1569666710371893 , 0.1550603505188271 , 0.15973004772021282 , 0.15594909402214477 , 0.15737570592357397 , 0.15644359421197918 , 0.1619463597962646 , 0.1616833144598337 , 0.17390427635436956 , 0.16255222887184795 , 0.1618957813521405 , 0.16382576421685702 , 0.15727730475563143 , 0.16355606683485158 , 0.16195762075018383 , 0.16236439373587908 , 0.17720048852190154 , 0.16221779919238902 ]

pcpg100_vm5 = [0.011977884105838391 , 0.01653735764301099 , 0.020060115110287217 , 0.01877019555940926 , 0.021341950008571073 , 0.021098252598058975 , 0.021511897823682423 , 0.021037843353400157 , 0.01999679731818886 , 0.01813189103231304 , 0.018805881273287302 , 0.016632501686078285 , 0.01607320203919678 , 0.016176553952479147 , 0.015404740710574998 , 0.019369278769053047 , 0.018223677472933866 , 0.015007100149200935 , 0.014206282279890887 , 0.018055626015796158 , 0.015211417097673447 , 0.0178450511536647 , 0.01737099778221273 , 0.016158992727540587 , 0.01805123414727438 , 0.017223849440765212 , 0.01851730941851328 , 0.015682558657945878 , 0.014624970781482349 , 0.01642417215265108 , 0.01642242912002076 , 0.016844692531194735 , 0.017185615616676038 , 0.01595468740132822 , 0.01729073464057504 , 0.016577752016860483 , 0.016516972455992946 , 0.01570622050422108 , 0.016437803430520877 , 0.016273777024804773 , 0.014849399136868547 , 0.01398509744640402 , 0.016274861580138023 , 0.01789175195387971 , 0.01698051193907206 , 0.017308245260410547 , 0.014962078744523424 , 0.014508166849712793 , 0.015822148557032484 , 0.014431576378159576 , 0.013881712411026006 , 0.01523664853965297 , 0.016849148927658972 , 0.015049291701516596 , 0.014970301121277542 , 0.014795305197480731 , 0.014971835511876447 , 0.01666205662087337 , 0.01731436167453579 , 0.016310445269163035 , 0.017397214248459355 , 0.016516360139481774 , 0.01667516395230636 , 0.016733546166322288 , 0.01588618184762059 , 0.015605726633516597 , 0.015533138520525553 ]

times_100 = np.arange(0,len(pcpg100))*2.5
times_1 = np.arange(0,len(pcpg1))*2.5
times_10 = np.arange(0,len(pcpg10))*2.5
times_100_vm5 = np.arange(0,len(pcpg100_vm5))*2.5

plt.semilogy(times_1,pcpg1,label=r"$P_{CR}/P_{g} \sim 1$")
plt.semilogy(times_10,pcpg10,label=r"$P_{CR}/P_{g} \sim 10$")
#plt.semilogy(times_100_vm5,pcpg100_vm5,label=r"$P_{CR}/P_{g} \sim 100$, vm = 5")
plt.semilogy(times_100,pcpg100,label=r"$P_{CR}/P_{g} \sim 100$")
plt.xlabel("Time (code units)")
plt.ylabel(r"<$\nabla \cdot v$>")
plt.legend()
plt.title(r"$\kappa \sim 0.15 L_{0} v_{ph}$")
plt.savefig("velDivRMS_plot.pdf")
plt.close()

plt.loglog([1,10,100],[np.mean(pcpg1),np.mean(pcpg10),np.mean(pcpg100)],'bo',label="Simulations")
plt.loglog([1,10,100],np.mean(pcpg1)/[1,np.sqrt(10)/np.sqrt(2),10/np.sqrt(2)],'k--',label=r"<$\nabla \cdot v$> $\propto 1/v_{ph}$")
plt.xlabel(r"$P_{CR}/P_{g}$")
plt.ylabel(r"<$\nabla \cdot v$>")
plt.legend()
plt.tight_layout()
plt.savefig("velDiv_mean.pdf")
plt.close()


# kappa >> v_ph L_0

pcpg100_largerKappa = [0.012288201164213548 , 0.046363833221612805 , 0.05375254192343418 , 0.058782408858178675 , 0.07526375282018724 , 0.06914775936936499 , 0.0834570417757898 , 0.083513589117337 , 0.0819266191426154 , 0.08381379413770837 , 0.0788855559646747 , 0.0814241019595068 ]

pcpg1_largerKappa = [0.012288201164213548 , 0.05532358400189593 , 0.0777024122721509 , 0.09261356634312148 , 0.13178816836389634 , 0.14590306124565997 , 0.17803961498088128 , 0.1932607306380335 , 0.22100228908273498 , 0.23070662885734633 ]

times_1_largerKappa = np.arange(0,len(pcpg1_largerKappa))*2.5
times_100_largerKappa = np.arange(0,len(pcpg100_largerKappa))*2.5

plt.semilogy(times_1_largerKappa,pcpg1_largerKappa,label=r"$P_{CR}/P_{g} \sim 1$")
plt.semilogy(times_100_largerKappa,pcpg100_largerKappa,label=r"$P_{CR}/P_{g} \sim 100$")
plt.xlabel("Time (code units)")
plt.ylabel(r"<$\nabla \cdot v$>")
plt.legend()
plt.title(r"$\kappa \sim 15 L_{0} v_{ph}$")
plt.savefig("velDivRMS_plot_largerKappa.pdf")
plt.close()

#####################################################################
# Also useful to plot dv/v, drho/rho, dPc/Pc
# taken between code times of 40x2.5 and 49x2.5
#Pc/Pg = 1
deltarho_rho_pcpg1_normal = [0.29337641986905055 , 0.2780083429027091 , 0.2868875149923845 , 0.2909306417719856 , 0.2784546033182773 , 0.28887022378409527 , 0.29826774444945586 , 0.3140437921530365 , 0.31452777214415484 , 0.3124200347271724 ]
deltav_v_pcpg1_normal = [0.43576957567559904 , 0.44511165810662573 , 0.44458251639436613 , 0.43024570555738 , 0.40897960702913644 , 0.44252730059128276 , 0.4405304249917693 , 0.4285832879270553 , 0.42933905817063456 , 0.42718144827567 ]
deltaEc_Ec_pcpg1_normal =[0.2439309382035353 , 0.23458516581118236 , 0.24728981761188534 , 0.2497533864150685 , 0.24245657511380095 , 0.24002808617198756 , 0.2520804493975792 , 0.2544394575180854 , 0.25131077012085823 , 0.24453088365737294 ]


# log normal std devs:
# pc/pg = 0.01
deltarho_rho_pcpg001_lognormal =  [0.40190771608074743 , 0.40445406162565994 , 0.40450789635369433 , 0.4129922936701334 , 0.4104929849354317 , 0.4192592359393777 , 0.4175273204109212 , 0.42599417385456334 , 0.42620613238412275 , 0.4271570077676431 ]
deltav_v_pcpg001_lognormal =  [0.4910168140915236 , 0.5016875995465532 , 0.5012063584003411 , 0.48530979636392585 , 0.49889462606442414 , 0.4891161904808028 , 0.5034219325191189 , 0.4966683305559804 , 0.48933875965384593 , 0.4917065398785407 ]
deltaEc_Ec_pcpg001_lognormal = [0.44138829377120503 , 0.46280692810495494 , 0.43653806051885125 , 0.43604685718901115 , 0.45641923471506934 , 0.4277442793171098 , 0.4425974058031075 , 0.4545364572767805 , 0.4225060416884155 , 0.4590225339883069 ]

# pc/pg = 0.1
deltarho_rho_pcpg01_lognormal =  [0.37200780004896683 , 0.3614243765090844 , 0.3547864631948321 , 0.39133951558859675 , 0.3657138390269098 , 0.359197363719843 , 0.3801890717524524 , 0.3972397477522367 , 0.3798317150256097 , 0.3747999873097246 ]
deltav_v_pcpg01_lognormal = [0.48326780300182914 , 0.4916252358523488 , 0.49771860203205054 , 0.49477891312031874 , 0.5019938481253444 , 0.48465024819090374 , 0.49124425174594033 , 0.5030002055099575 , 0.48826142423239266 , 0.48426924196306786 ]
deltaEc_Ec_pcpg01_lognormal = [0.3805799384024574 , 0.41183423180230266 , 0.355892640470665 , 0.3765001132427118 , 0.38677530713749136 , 0.34871111042645186 , 0.4017307316284062 , 0.3619612779423155 , 0.34801660675149926 , 0.3672087329151761 ]

# pc/pg = 0.5
deltarho_rho_pcpg05_lognormal = [0.317890741975096 , 0.3061121111768646 , 0.3236401482893253 , 0.3192087473526703 , 0.3230847169003138 , 0.3212968546018282 , 0.31940673282341653 , 0.3413558866000766 , 0.325190723535168 , 0.34518497923557967 ]
deltav_v_pcpg05_lognormal = [0.4718304848123288 , 0.4999415098307381 , 0.5026481285928349 , 0.4738932030555551 , 0.4984469871644127 , 0.48452104726988077 , 0.4911632283969226 , 0.501414999399631 , 0.48588781459057306 , 0.486323733379791 ]
deltaEc_Ec_pcpg05_lognormal = [0.309092237537865 , 0.3072065448796664 , 0.30204500479768653 , 0.2804783367225823 , 0.29856164658478196 , 0.3132642792984453 , 0.26660502185108864 , 0.27361039904490364 , 0.30009981981174216 , 0.27172229436470197 ]

# pcpg = 1
deltarho_rho_pcpg1_lognormal =  [0.2943473095771258 , 0.27524690632036075 , 0.28483896595763386 , 0.2837988022966876 , 0.2700642106526821 , 0.28810828565342406 , 0.2917099109863208 , 0.3035979554910498 , 0.3088830610167503 , 0.299198749736998 ]
deltav_v_pcpg1_lognormal =  [0.4942939519026735 , 0.5013664504294721 , 0.4989472805809528 , 0.49316147498371204 , 0.47718226273182435 , 0.5014458867748263 , 0.5027673780938097 , 0.48573782733970805 , 0.4872709389905311 , 0.4926758580931133 ]
deltaEc_Ec_pcpg1_lognormal =  [0.2420162357236763 , 0.23310447540246998 , 0.24917263505825055 , 0.24975742045479857 , 0.24903674724969024 , 0.23833969612307748 , 0.24838142616252476 , 0.24940728022884215 , 0.25107314225701144 , 0.2482138398073448 ]



# pc pg = 10
deltarho_rho_pcpg10_lognormal = [0.2883452017903949 , 0.2881001281692128 , 0.268947580908203 , 0.2418499953430368 , 0.23904095204570008 , 0.23928314550078714 , 0.23056213534453596 , 0.23374225599913556 , 0.2315758658363096 , 0.2337385807524972 ]

deltav_v_pcpg10_lognormal = [0.5143657017547599 , 0.49424511331046317 , 0.5029939384100964 , 0.4853228572427643 , 0.4901993089905883 , 0.4800955982386488 , 0.4839582120279097 , 0.4830614946896038 , 0.5019230254004136 , 0.4936388871930607 ]

deltaEc_Ec_pcpg10_lognormal = [0.05601347909052262 , 0.05767548494504319 , 0.053510374618786 , 0.061628245712476146 , 0.06032051214679901 , 0.05989344327795246 , 0.059999407460300164 , 0.0654870540980423 , 0.06053171206067298 , 0.060566753129738346 ]


# pc pg = 100
deltarho_rho_pcpg100_lognormal = [0.2491018582082567 , 0.2497017877132948 , 0.24377794135690753 , 0.23237661642834956 , 0.22636934678810666 , 0.22568234648476262 , 0.223596125286524 , 0.2206574797651086 , 0.21903125730922157 , 0.2172505042068009 ]

deltav_v_pcpg100_lognormal = [0.49814038546014183 , 0.5119924466931477 , 0.5062617511226452 , 0.499026345106235 , 0.498004014631257 , 0.49410916096498414 , 0.4807406404400702 , 0.4860523527151836 , 0.49805979533281847 , 0.500744210408903 ]

deltaEc_Ec_pcpg100_lognormal = [0.008751988603922536 , 0.008027073229142492 , 0.006893609055376136 , 0.007631256100778693 , 0.00835745177384194 , 0.0083846796180372 , 0.00922661908687341 , 0.00895662577316084 , 0.008403343817723402 , 0.009004907032623516 ]

"""
#crbeta = 10000, cs = 10x higher
delta rho
[0.05456341785330651 , 0.05455947127439129 , 0.050646998163298956 , 0.05091352600104875 , 0.051784136035848125 , 0.05364105493980883 , 0.0499071172740244 , 0.05300825824229039 , 0.050556402561135395 , 0.0502129750128842 ]
delta v
[0.48070794918170495 , 0.5138303024829248 , 0.4820230300068946 , 0.46837946060131175 , 0.500990955396054 , 0.47333025950368446 , 0.4932146084168674 , 0.493628647461974 , 0.513600176259619 , 0.4605474123670245 ]
delta Ec
[0.06311395440856055 , 0.06246394979100558 , 0.05814106397981121 , 0.06144576812683436 , 0.06122367961562705 , 0.06614281959165985 , 0.060857995063091454 , 0.06873601361140244 , 0.06694538669123437 , 0.06319748522155624 ]
"""

# keeping kappa the same but increasing v_ph by increasing Pc/Pg
# pc/pg = 10
deltarho_rho_pcpg10_samekappa = [0.1862316147463004 , 0.18707560532342096 , 0.1799335336166985 , 0.17208466450990037 , 0.17968441912514882 , 0.19009466092361654 , 0.18765272493079377 , 0.18891234482639502 , 0.18820654613748022 , 0.18054433369419404 ]

deltav_v_pcpg10_samekappa = [0.5209051674073358 , 0.5038403668411242 , 0.49511121401638053 , 0.5070054914006328 , 0.5058035263356606 , 0.4989291661791787 , 0.48228687317156016 , 0.49701373281846245 , 0.488217304700028 , 0.501823700541123 ]

deltaEc_Ec_pcpg10_samekappa = [0.09482824404185086 , 0.10062359614160321 , 0.09879740348677055 , 0.091272619250417 , 0.1026689372046129 , 0.10543554155293215 , 0.10083226871183223 , 0.1001055951901534 , 0.09414308507143153 , 0.10245921403633663 ]


#pc/pg = 100
deltarho_rho_pcpg100_samekappa = [0.10391686597929645 , 0.1049569554991847 , 0.10458680244643062 , 0.10456747583023457 , 0.10599880907581447 , 0.10598318381507707 , 0.10393487119161082 , 0.10375462060104204 , 0.10347145092189881 , 0.10318032069202542 ]
deltav_v_pcpg100_samekappa = [0.5102218655074602 , 0.5336570653370445 , 0.5039885741077923 , 0.46697071784925376 , 0.5140456732337613 , 0.4956509212069974 , 0.49550247320453666 , 0.5103852980290563 , 0.5129730305927872 , 0.5049929256293241 ]
deltaEc_Ec_pcpg100_samekappa = [0.03488666179568642 , 0.033122500075240424 , 0.03233896194988544 , 0.03304090088828804 , 0.033446085952389376 , 0.030952454058481165 , 0.031302070588706335 , 0.03295444107340636 , 0.03164772765273725 , 0.03365211548261019 ]



###################################3
deltarho_rho_pcpg1 = [3.0933319478776107 , 3.01122244770675 , 3.0589314811983224 , 3.080410940872016 , 3.0136382934595063 , 3.0694835742184887 , 3.1190121730652405 , 3.2004351473187165 , 3.202900329393836 , 3.19215053019268 ]

deltav_v_pcpg1 = [3.3146781490184942 , 3.256315861098798 , 3.3236898444772534 , 3.27528062272781 , 3.119790614755457 , 3.2700304143183514 , 3.367457432170425 , 3.3091196894225243 , 3.276440109355293 , 3.309853867862158 ]

deltaEc_Ec_pcpg1 = [13.188470943041917 , 12.899520138585624 , 13.205841731922085 , 13.233053712210914 , 13.003309279772452 , 12.904644302122566 , 13.17987629111946 , 13.206630402354003 , 13.090850829978486 , 12.886027470415511 ]



# pc/pg = 10
deltarho_rho_pcpg10 = [3.0649214883659317 , 3.0573092054859776 , 2.9282369356044553 , 2.7566988034550346 , 2.752326324852026 , 2.760257546654431 , 2.7074029604374013 , 2.7279992537958235 , 2.7239298350409697 , 2.7339832153632972 ]
deltav_v_pcpg10 = [3.6997183344146096 , 3.6076209737867786 , 3.4920944447593216 , 3.40113528086086 , 3.429797656995464 , 3.4151425713713386 , 3.3804784269602512 , 3.4104757926297355 , 3.5384189786091924 , 3.5046991169542174 ]
deltaEc_Ec_pcpg10 = [2.2162688239573516 , 2.2495173983623284 , 2.1590764792833133 , 2.324772226024468 , 2.3045871611699513 , 2.294308730565667 , 2.2859671857025403 , 2.3802936089097937 , 2.297759083034991 , 2.2987314453838272 ]



# pc/pg = 100
deltarho_rho_pcpg100 = [2.8782166290624303 , 2.8843705823917265 , 2.845511595404924 , 2.7603034980328114 , 2.718325758080243 , 2.713536130868234 , 2.692804432462478 , 2.6725411339468925 , 2.65803389202582 , 2.6433171688307397 ]
deltav_v_pcpg100 = [3.5357799236878655 , 3.638788796209724 , 3.498160810033864 , 3.43364150270335 , 3.375641536795065 , 3.433814814198888 , 3.423527550650486 , 3.3613726002398128 , 3.4229242151487 , 3.4547302997672866 ]
deltaEc_Ec_pcpg100 = [0.2800049440888613 , 0.26825590510948505 , 0.2486593274077706 , 0.26150941709657777 , 0.273722884810759 , 0.2742028797667472 , 0.2876007142133435 , 0.28335719564249673 , 0.2743709381334951 , 0.2841999455332832 ]


#advection only
#pcpg1
deltarho_rho_pcpg1_kappa0 = [0.28322503284501555 , 0.2886610967653754 , 0.31551035439131503 , 0.29841507454190974 , 0.3046947333588689 , 0.33004645479756034 , 0.31343908548388605 , 0.31369189220496924 , 0.2788675961310787 , 0.2819251273980857 ]
deltav_v_pcpg1_kappa0 = [0.48291988257920443 , 0.49102627627536316 , 0.48136137958308295 , 0.48039524168557485 , 0.5011593001265359 , 0.5036592890652174 , 0.5026933748315706 , 0.49548541421122927 , 0.4961464436841769 , 0.4977637361417212 ]
deltaEc_Ec_pcpg1_kappa0 = [0.3783655548272161 , 0.38533829855210505 , 0.4221872835219291 , 0.39881756049598827 , 0.40759482011987863 , 0.4414735703195235 , 0.41924896621296603 , 0.4186168905153195 , 0.3730654271017886 , 0.37699462340490897 ]

# pcpg = 10
deltarho_rho_pcpg10_kappa0 = [0.12710684610141904 , 0.1352815126966009 , 0.12316993799071828 , 0.13083381073710212 , 0.12555378081766214 , 0.12363049000055616 , 0.13273583773852327 , 0.126202581554661 , 0.12443641998686565 , 0.13447214573218583 ]
deltav_v_pcpg10_kappa0 = [0.5067526703356123 , 0.5117548597668732 , 0.5094180435423787 , 0.517958564230184 , 0.4909289528808745 , 0.46231616393539016 , 0.47899867209686103 , 0.4972444403440077 , 0.4707718602547066 , 0.5098129142431062 ]
deltaEc_Ec_pcpg10_kappa0 = [0.17059398789141206 , 0.1812443703697311 , 0.1650786833847269 , 0.1754751751668888 , 0.1673841174282755 , 0.16535437804845204 , 0.17808221285427314 , 0.16930495752425004 , 0.16731332997967865 , 0.18055945758073316 ]

# pcpg = 100
deltarho_rho_pcpg100_kappa0 = [0.045478484552201055 , 0.045594359246689836 , 0.04864419524506882 , 0.04720883101256284 , 0.04743351075917894 , 0.04512289974770234 , 0.04576688929508333 , 0.04796661263410931 , 0.04311142935901098 , 0.04529895307290202 ]
deltav_v_pcpg100_kappa0 = [0.4927472463980799 , 0.48507325609557267 , 0.47341415105887613 , 0.4739085499742914 , 0.5185874716104386 , 0.4930728787758891 , 0.4648640554075796 , 0.49573261833400306 , 0.4850261952319301 , 0.48943463635410184 ]
deltaEc_Ec_pcpg100_kappa0 = [0.060796669061324145 , 0.06059909381439495 , 0.06365890551309861 , 0.06317683424371653 , 0.06217415944656439 , 0.05998076376842187 , 0.0601136723718211 , 0.06178181841806916 , 0.0580946506141973 , 0.060784116405548747 ]

fill_style='none'
ms = 10
plt.loglog([0.01,0.1,0.5,1,10,100],[np.mean(deltarho_rho_pcpg001_lognormal),np.mean(deltarho_rho_pcpg01_lognormal),np.mean(deltarho_rho_pcpg05_lognormal),np.mean(deltarho_rho_pcpg1_lognormal),np.mean(deltarho_rho_pcpg10_lognormal),np.mean(deltarho_rho_pcpg100_lognormal)],'bo',markersize=ms,fillstyle=fill_style,label=r"$\delta \rho$/ $\rho$")
plt.loglog([0.01,0.1,0.5,1,10,100],[np.mean(deltav_v_pcpg001_lognormal),np.mean(deltav_v_pcpg01_lognormal),np.mean(deltav_v_pcpg05_lognormal), np.mean(deltav_v_pcpg1_lognormal),np.mean(deltav_v_pcpg10_lognormal),np.mean(deltav_v_pcpg100_lognormal)],'ko',markersize=ms,fillstyle=fill_style,label=r"$\delta v$/v")
plt.loglog([0.01,0.1,0.5,1,10,100],[np.mean(deltaEc_Ec_pcpg001_lognormal),np.mean(deltaEc_Ec_pcpg01_lognormal),np.mean(deltaEc_Ec_pcpg05_lognormal),np.mean(deltaEc_Ec_pcpg1_lognormal),np.mean(deltaEc_Ec_pcpg10_lognormal),np.mean(deltaEc_Ec_pcpg100_lognormal)],'go',markersize=ms,fillstyle=fill_style,label=r"$\delta P_{CR}$/$P_{CR}$")
#plt.loglog([1,10,100],np.mean(deltaEc_Ec_pcpg1_lognormal)/[1,np.sqrt(10)/np.sqrt(2),10/np.sqrt(2)],'k--',label=r"$\propto 1/v_{ph}$")
#plt.loglog([1,10,100],np.mean(deltaEc_Ec_pcpg1_lognormal)/[1,10/2,100/2],'g--',label=r"$\propto 1/P_{CR}$")
plt.loglog([0.01,0.1,1,10,100],0.5*np.ones(5),'k--',label=r"$v/c_{s} = \mathcal{M}_{s}$")
plt.loglog(np.arange(0.01,100,0.01),0.5/np.sqrt(1.0 + np.arange(0.01,100,0.01)),'k-.',label=r"$v/v_{ph} = \mathcal{M}_{ph}$")
plt.loglog(np.arange(0.01,100,0.01),0.5*1.01/(1.0 + np.arange(0.01,100,0.01)),'k',linestyle='dotted',label=r"$v/v_{ph}^{2} \propto 1/P_{CR}$")
plt.loglog([1,10,100],[np.mean(deltaEc_Ec_pcpg1_kappa0),np.mean(deltaEc_Ec_pcpg10_kappa0),np.mean(deltaEc_Ec_pcpg100_kappa0)],'gd',markersize=ms,fillstyle=fill_style)
plt.loglog([1,10,100],[np.mean(deltarho_rho_pcpg1_kappa0),np.mean(deltarho_rho_pcpg10_kappa0),np.mean(deltarho_rho_pcpg100_kappa0)],'bd',markersize=ms,fillstyle=fill_style)
plt.loglog([1,10,100],[np.mean(deltav_v_pcpg1_kappa0),np.mean(deltav_v_pcpg1_kappa0),np.mean(deltav_v_pcpg100_kappa0)],'kd',markersize=ms,fillstyle=fill_style)
plt.xlabel(r"$P_{CR}/P_{g}$",fontsize=18)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
#plt.title(r"$\kappa \sim 0.15 L_{0} v_{ph}$ in all simulations",fontsize=14)
plt.legend(prop={'size': 12})
add_legend([{'marker' : 'o', 'label' : r'$\kappa \sim 0.15 L_{0}v_{ph}$'}, {'marker' : 'd', 'label' : r'$\kappa = 0$'}],
        default_plot_args = {'ls' : '', 'c' : 'k', 'markersize' : '10','fillstyle' : 'none'}, loc="lower center",
                                  title = r'')
plt.tight_layout()
plt.savefig("deltarho_mean.pdf")
plt.close()
